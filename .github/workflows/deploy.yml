name: 'Deploy to AWS CloudFormation'

on: 
  push:
    branches: [ main ]
  # pull_request:
  #   branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      region:
        description: 'AWS Region'
        required: true
        default: 'us-east-1'
      cfn-name:
        description: 'Name of stack'
        required: true
        default: ''
      cfn-template:
        description: 'template for stack'
        required: true
        default: ''


jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code from master branch
        uses: actions/checkout@v2

      # Configure AWS Credential
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.ACCESS_KEY_SECRET }}
          aws-region: us-east-1 #${{ github.event.inputs.region}}

      # Deploy to AWS CloudFormation
      # - name: Deploy to AWS CloudFormation
      #   uses: aws-actions/aws-cloudformation-github-deploy@v1
      #   with:
      #     name: infrastructure-mercabotsi
      #     template: root.yaml
      #     no-fail-on-empty-changeset: "1"
      #     parameter-overrides: >-
      #       pEnvironment="dev"

      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ github.event.inputs.cfn-name}}
          template:  ${{ github.event.inputs.cfn-template}}
          no-fail-on-empty-changeset: "1"
          capabilities: 'CAPABILITY_AUTO_EXPAND'
          tags: >-
            github-devops:pipeline-id=${{ github.workflow }},
            github-devops:creator-email=${{ github.actor }},
            github-devops:repository=${{ github.repository }}

# cloudmind:project-name=${{ env.project-name }}
# cloudmind:application-code=${{ env.application-code }}
# cloudmind:environment=$(getEnv)