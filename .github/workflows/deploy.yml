name: 'Deploy to AWS CloudFormation'

on: 
  push:
    branches: [ main ]
  # pull_request:
  #   branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      region:
        description: 'AWS Region'
        required: true
        default: 'us-east-1'
      cfn-name:
        description: 'Name of stack'
        required: true
        default: ''
      cfn-template:
        description: 'template for stack'
        required: true
        default: ''


jobs:

  upload:
    name: Uploads Template
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.ACCESS_KEY }}
          aws_secret_access_key: ${{ secrets.ACCESS_KEY_SECRET}}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: '.'


  deploy:
    name: Deploy Clouformation
    runs-on: ubuntu-latest
    needs: upload
    steps:
      - name: Checkout code from master branch
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.ACCESS_KEY_SECRET }}
          aws-region: us-east-1

      - name: Deploy AWS CloudFormation Dev
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: infraestructure
          template:  root.yaml
          no-fail-on-empty-changeset: "1"
          capabilities: 'CAPABILITY_AUTO_EXPAND'
          parameter-overrides: >-
           pBucket=${{ secrets.AWS_BUCKET }}
           pEnvironment=dev
          tags: >-
            github-devops:pipeline-id=${{ github.workflow }},
            github-devops:creator-email=${{ github.actor }},
            github-devops:repository=${{ github.repository }}

# cloudmind:project-name=${{ env.project-name }}
# cloudmind:application-code=${{ env.application-code }}
# cloudmind:environment=$(getEnv)